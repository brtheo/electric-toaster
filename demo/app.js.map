{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":"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","sourcesContent":["import ElectricToaster, { ToastTemplate, ToastTemplateData, ToastAnimation } from '../ElectricToaster.js'\r\nconst simpleToast: ToastTemplate = ({ title, content, avatar, date }: ToastTemplateData) => /*html*/`\r\n        <header slot=\"header\" class=\"avatar\">\r\n                <img src=\"${avatar}\"></img>   \r\n\t\t</header>\r\n        <main slot=\"main\">\r\n                <div class=\"title\">${title}</div>\r\n                <div class=\"content\">${content}</div>               \r\n        </main>\r\n        <footer slot=\"footer\" class=\"footer\">${date}</footer>\r\n`\r\nconst newPostToast: ToastTemplate = ({ title, username, avatar }: ToastTemplateData) => /*html*/`\r\n        <header slot=\"header\" class=\"avatar\">\r\n                <img src=\"${avatar}\"></img>   \r\n\t\t</header>\r\n        <main slot=\"main\">\r\n                <div class=\"title\"><strong>${username}</strong> has a new post </div>\r\n                <div class=\"content\"><i>${title}</i></div>               \r\n        </main>\r\n        <footer slot=\"footer\" class=\"footer\"><a href=\"#\">continue reading...</a></footer>\r\n`\r\nconst actionToast: ToastTemplate = ({ title, content, btn, placeholder }: ToastTemplateData) => /*html*/`\r\n        <header slot=\"header\" class=\"title\">${title}</header>\r\n        <main slot=\"main\">\r\n                <div class=\"content\">${content}</div>\r\n                <input type=\"text\" placeholder=\"${placeholder}\" id=\"toast-input\"/>\r\n                <button id=\"toast-btn\">${btn}</button>\r\n        </main>\r\n`\r\nconst minimumToast: ToastTemplate = ({ title }: ToastTemplateData) => /*html*/`\r\n        <main slot=\"header\" class=\"title\">${title}</main>\r\n`\r\n\r\nconst simpleAnimation: ToastAnimation = {\r\n\tenter: [\r\n\t\t[\r\n\t\t\t{ transform: 'translateX(25px)', opacity: '0' },\r\n\t\t\t{ transform: 'translateX(0px)', opacity: '1' }\r\n\t\t],\r\n\t\t{ duration: 250, endDelay: 2500 }\r\n\t],\r\n\tleave: [\r\n\t\t[\r\n\t\t\t{ transform: 'translateX(0px)', opacity: '1' },\r\n\t\t\t{ transform: 'translateX(25px)', opacity: '0' }\r\n\t\t],\r\n\t\t{ duration: 250 }\r\n\t]\r\n}\r\nconst actionAnimation: ToastAnimation = {\r\n\tenter: [\r\n\t\t[\r\n\t\t\t{ transform: 'translateY(25px)', opacity: '0' },\r\n\t\t\t{ transform: 'translateY(0px)', opacity: '1' }\r\n\t\t],\r\n\t\t{ duration: 250, endDelay: 2500 }\r\n\t],\r\n\tleave: [\r\n\t\t[\r\n\t\t\t{ transform: 'translateY(0px)', opacity: '1' },\r\n\t\t\t{ transform: 'translateY(25px)', opacity: '0' }\r\n\t\t],\r\n\t\t{ duration: 250 }\r\n\t]\r\n}\r\n\r\nconst electricToaster = new ElectricToaster(\"simple-toast\", { template: simpleToast, animation: simpleAnimation })\r\nelectricToaster.registerTemplate('action-toast', { template: actionToast, type: 'action', animation: actionAnimation })\r\nelectricToaster.registerTemplate('verysimple-toast', { template: minimumToast, animation: simpleAnimation })\r\nelectricToaster.registerTemplate('newpost-toast', { template: newPostToast, animation: simpleAnimation })\r\n\r\n\r\n\r\ndocument.querySelector('#verysimple-toast')\r\n\t.addEventListener('click', () =>\r\n\t\telectricToaster.burn('verysimple-toast', { title: 'I\\'m very simple' })\r\n\t)\r\ndocument.querySelector('#simple-toast')\r\n\t.addEventListener('click', async () => {\r\n\t\tconst d = new Date(Date.now())\r\n\t\tconst parsed = d.toLocaleTimeString()\r\n\t\tconst picRaw = await fetch(\"https://avatars0.githubusercontent.com/u/18089767?s=460&u=1d1ce017bba4d7613e34761858b058e0cf87f334&v=4\")\r\n\t\tconst pic = await picRaw.blob()\r\n\t\telectricToaster.burn(\"simple-toast\",\r\n\t\t\t{\r\n\t\t\t\ttitle: `Brossier Theo`,\r\n\t\t\t\tcontent: \"lorem ipsum dolor sit amet lorem ipsum dolor sit amet lorem ipsum dolor sit amet\",\r\n\t\t\t\tavatar: URL.createObjectURL(pic),\r\n\t\t\t\tdate: parsed\r\n\t\t\t}\r\n\t\t)\r\n\t})\r\n\r\ndocument.querySelector('#action-toast')\r\n\t.addEventListener('click', () => {\r\n\t\telectricToaster.burn(\"action-toast\",\r\n\t\t\t{\r\n\t\t\t\ttitle: \"Action toast\",\r\n\t\t\t\tcontent: \"lorem ipsum dolor sit amet\",\r\n\t\t\t\tbtn: \"push me\",\r\n\t\t\t\tplaceholder: \"send some text\"\r\n\t\t\t},\r\n\r\n\t\t)\r\n\t})\r\nelectricToaster.registerToastEvent($burntToast => {\r\n\t$burntToast.querySelector('#toast-btn')\r\n\t\t.addEventListener('click', () => {\r\n\t\t\t$burntToast.initiateLeaveAnimation()\r\n\t\t})\r\n})\r\n\r\nconst api = async url => {\r\n\tfetch(url)\r\n\t\t.then(response => response.json())\r\n\t\t.then(async data => {\r\n\t\t\tconst picRaw = await fetch(\"https://avatars0.githubusercontent.com/u/18089767?s=460&u=1d1ce017bba4d7613e34761858b058e0cf87f334&v=4\")\r\n\t\t\tconst pic = await picRaw.blob()\r\n\t\t\tconst userRaw = await fetch(`https://jsonplaceholder.typicode.com/users/${data.userId}`)\r\n\t\t\tconst user = await userRaw.json()\r\n\t\t\tlet datas = Object.assign({},{avatar: URL.createObjectURL(pic)}, data, {username: user.name})\t\r\n\t\t\tconsole.log('fired from api call')\t\r\n\t\t\telectricToaster.burn('newpost-toast', datas)\r\n\t\t})\r\n}\r\napi('https://jsonplaceholder.typicode.com/posts/27')"]}