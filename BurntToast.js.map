{"version":3,"file":"BurntToast.js","sourceRoot":"","sources":["src/BurntToast.ts"],"names":[],"mappings":"AACA,MAAM,OAAO,UAAW,SAAQ,WAAW;IAKvC;QACI,KAAK,EAAE,CAAA;QACP,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAC,MAAM,EAAC,CAAC;aAC3B,SAAS,GAAG,QAAQ,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAiCxB,CAAA;IACL,CAAC;IACD,IAAY,IAAI;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAc,CAAA;IACjD,CAAC;IAEO,2BAA2B;QAC/B;;;;WAIG;QACH,QAAQ,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,CAAc,EAAE,EAAE;YAC7D,CAAC,CAAC,eAAe,EAAE,CAAA;YACnB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,MAAM,CAAA;YACnC,IAAI,CAAC,sBAAsB,EAAE,CAAA;QACjC,CAAC,CAAC,CAAA;QACF;;WAEG;QACH,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,GAAG,EAAE,CACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,EAAE,CACvB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAA;QAE5B;;WAEG;QACH,IAAG,IAAI,CAAC,IAAI,KAAK,QAAQ;YACrB,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,CAChC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAA;IAC1C,CAAC;IAED;;;;OAIG;IACI,sBAAsB;QACzB,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAA;QAC3D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAC,OAAO,CAAC,CAAA;QAC5C,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,EAAE,CAAE,IAAI,CAAC,sBAAsB,EAAE,CAAA;IAC9D,CAAC;IAED;;;;OAIG;IACI,sBAAsB;QACzB,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAA;QAC3D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAC,OAAO,CAAC,CAAA;QAC5C,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAA;IAC7C,CAAC;IAED;;OAEG;IACH,iBAAiB;QACb,IAAI,CAAC,2BAA2B,EAAE,CAAA;QAClC,QAAQ,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,cAAc,EAAE,EAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC,CAAA;IAChH,CAAC;IAED;;OAEG;IACH,oBAAoB;QAChB,QAAQ,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,YAAY,EAAE,EAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC,CAAA;IAC9G,CAAC;CAEJ;AACD,UAAU,CAAC,cAAc,CAAC,MAAM,CAAC,aAAa,EAAC,UAAU,CAAC,CAAA","sourcesContent":["import {ToastAnimation, ToastType} from './ElectricToaster'\r\nexport class BurntToast extends HTMLElement {\r\n    private enter?: Animation\r\n    private leave?: Animation\r\n    private animationDefinition: ToastAnimation\r\n\r\n    constructor() {\r\n        super() \r\n        this.attachShadow({mode:\"open\"})\r\n            .innerHTML = /*html*/`\r\n            <style>\r\n                :host {\r\n                    bottom: 5px;\r\n                    right: 5px;\r\n                    position: fixed;\r\n                    padding: 15px;\r\n                    background-color: #fafafafa;\r\n                    display: grid;\r\n                    grid-template-columns: min-content 300px;\r\n                    grid-template-rows: auto;\r\n                    grid-template-areas: \r\n                        \"header main\"\r\n                        \"header footer\";                        \r\n                    grid-gap: 15px;  \r\n                    transition: box-shadow 0.2s;\r\n                }\r\n                :host(:hover) {\r\n                    box-shadow: 2px 2px 5px 5px #25252579;\r\n                }\r\n                ::slotted(header) {\r\n                    grid-area: header;\r\n                }\r\n                ::slotted(main) {\r\n                    grid-area: main;\r\n                }\r\n                ::slotted(footer) {\r\n                    grid-area: footer;\r\n                }\r\n            </style>\r\n            <slot name=\"header\"></slot>\r\n            <slot name=\"main\"></slot>\r\n            <slot name=\"footer\"></slot> \r\n        `\r\n    }\r\n    private get type(): ToastType {\r\n        return this.getAttribute('type') as ToastType\r\n    }\r\n\r\n    private _belongsToAnElectricToaster() {\r\n        /**\r\n         * Wait for the {@link #animationDefinition} to be injected through event.\r\n         * Then start the {@link #enter} animation\r\n         * @listens provideAnimation\r\n         */\r\n        document.addEventListener('provideAnimation', (e: CustomEvent) => {\r\n            e.stopPropagation()\r\n            this.animationDefinition = e.detail\r\n            this.initiateEnterAnimation()    \r\n        })\r\n        /**\r\n         * Cancel the enter and therefore the leave animation when hovering the BurntToast element\r\n         */\r\n        this.addEventListener('mouseenter', () => \r\n            this.enter.onfinish = () => \r\n                this.enter.cancel())\r\n        \r\n        /**\r\n         * If the BurntToast element doesn't contain any input in it, clicking it fires initiateLeaveAnimation()\r\n         */\r\n        if(this.type === 'simple') \r\n            this.addEventListener('click', () => \r\n                this.initiateLeaveAnimation())\r\n    }\r\n\r\n    /**\r\n     * Defines the keyframes and options for enter animation.\r\n     * @remarks\r\n     * Defines the callback onfinish of the enter animation to an anonymous function that returns the void method initiateLeaveAnimation().\r\n     */\r\n    public initiateEnterAnimation() {\r\n        const [Keyframes, options] = this.animationDefinition.enter\r\n        this.enter = this.animate(Keyframes,options)\r\n        this.enter.onfinish = () =>  this.initiateLeaveAnimation()\r\n    }\r\n\r\n    /**\r\n     * Defines the keyframes and options for leave animation.\r\n     * @remarks\r\n     * Defines the callback onfinish of leave animation to an anonymous function that returns the void method remove() on the element.\r\n     */\r\n    public initiateLeaveAnimation() {\r\n        const [Keyframes, options] = this.animationDefinition.leave\r\n        this.leave = this.animate(Keyframes,options)\r\n        this.leave.onfinish = () => this.remove()\r\n    }\r\n\r\n    /**\r\n     * @fires toastBurning Is now added to DOM\r\n     */\r\n    connectedCallback() {\r\n        this._belongsToAnElectricToaster()\r\n        document.dispatchEvent(new CustomEvent('toastBurning', {cancelable: true, bubbles: false, composed: false}))\r\n    }\r\n    \r\n    /**\r\n     * @fires toastEaten Is now removed from DOM\r\n     */\r\n    disconnectedCallback() {\r\n        document.dispatchEvent(new CustomEvent('toastEaten', {cancelable: true, bubbles: false, composed: false}))\r\n    }\r\n\r\n}\r\nglobalThis.customElements.define('burnt-toast',BurntToast)"]}